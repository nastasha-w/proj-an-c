###########################################################
################ TEMPLATE for a makefile ##################
###########################################################
#  parts in brackets to be filled in with a python        #
#  .format command to generate a number of makefiles      #
#  with different compile options and executable names.   #
#  adapt fot the system, then copy the system-specific    #
#  template to _template_makefiles                        #
#  adaptations include e.g. the CC variable, -fopenmp or  #
#  -qopenmp, etc.                                         #
#  The executable name template should not be changed.    #
###########################################################

# PERIODIC BOUNDARY CONDITIONS:
# Compile with first two comments below removed.
# v2: main_v2 sets hmin to sqrt(2)*0.5*pixellength in stead of 0.5*pixellength 
#     (lines 208,210)
# v3: really gets the hmin right
#     set NumPart to long int in the main routine, since 1504^3 overflows int
#     not changed in the neighbor finding though, so tree-building will likely
#     break, at least in large datasets

###########################################################

## name of the executable
EXEC  = HsmlAndProject_v3_notree_C2_perbc.so


#OPTIONS += -DPERIODIC
OPTIONS += -DPERIODIC

## turns off tree building to find smoothing lengths if zero 
## (unnecessary calculation when considering e.g. gas particles)
#OPTIONS += -DNOTREE
OPTIONS += -DNOTREE

## KERNEL SHAPE:
## Choose one of -DSPH_KERNEL_GADGET, -DSPH_KERNEL_CUBIC,
## -DSPH_KERNEL_QUARTIC, -DSPH_KERNEL_QUINTIC, 
## -DSPH_KERNEL_C2, -DSPH_KERNEL_C4, -DSPH_KERNEL_C6

#KERNEL = -DSPH_KERNEL_C2
#KERNEL = -DSPH_KERNEL_GADGET
KERNEL = -DSPH_KERNEL_C2

## OpenMP, parallisation options DOATOMIC, DOREDUCTION, DOLOCKS 
## (with DOLOCKS having ARRCHUNKPIX suboption)
## do not use more than one parallel option!, 
## except setting ARRCHUNKPIX in DOLOCKS
## multiple options will cause undocumented behaviour
## do choose at least one, 
## otherwise there is no protection against race conditions
## DOALLPAR controls whether processes do all outer loops in parallel, 
## or just the main particle loop
## SCHEDULE defines the schedule used in the particle loop 
## (auto, runtime, static, dynamic, guided)
## Best tested: ATOMIC; dynamic,30000; (DOALLPAR) 
DOOPENMP += -fopenmp
DOOPENMP += -DDOATOMIC
##DOOPENMP += -DDOLOCKS
##DOOPENMP += -DARRCHUNKPIX=100
##DOOPENMP += -DDOREDUCTION

DOOPENMP += -DDOALLPAR
DOOPENMP += -DSCHEDULE=dynamic,30000
##dynamic,30000

#ADDOPENMP += $(DOOPENMP)


INCL   = proto_v3_omp.h allvars_v3_omp.h kernel_v3.h

CC     =  gcc-12

CFLAGS =  -O3 $(OPTIONS) $(KERNEL) $(ADDOPENMP) -fPIC -Wall -mcmodel=small
LNKCMD =  $(CC) -shared $(ADDOPENMP)

LIBS   =  -lm -g

## name object files too, to avoid messy name overlaps
OBJS   = main_v3_omp_notree_C2_perbc.o \
tree_v3_omp_notree_C2_perbc.o \
peano_v3_omp_notree_C2_perbc.o \
allvars_v3_omp_notree_C2_perbc.o \
kernel_v3_omp_notree_C2_perbc.o

#main_v3_omp_notree_C2_perbc.o: $(INCL)
#	$(CC) $(CFLAGS) -c -o main_v3_omp_notree_C2_perbc.o main_v3_omp.c

#tree_v3_omp_notree_C2_perbc.o: $(INCL)
#	$(CC) $(CFLAGS) -c -o tree_v3_omp_notree_C2_perbc.o tree_v3_omp.c

#peano_v3_omp_notree_C2_perbc.o: $(INCL)
#	$(CC) $(CFLAGS) -c -o peano_v3_omp_notree_C2_perbc.o peano_v3_omp.c

#allvars_v3_omp_notree_C2_perbc.o: $(INCL)
#	$(CC) $(CFLAGS) -c -o allvars_v3_omp_notree_C2_perbc.o allvars_v3_omp.c

#kernel_v3_omp_notree_C2_perbc.o: $(INCL)
#	$(CC) $(CFLAGS) -c -o kernel_v3_omp_notree_C2_perbc.o kernel_v3_omp.c

$(EXEC): $(OBJS)
	 $(LNKCMD)  $(OBJS) $(LIBS)  -o $(EXEC)

%_notree_C2_perbc.o: $(INCL) %.c
	$(CC) $(CFLAGS) -c -o $@ $(subst _notree_C2_perbc.o,,$@).c

#$(OBJS): $(INCL)

clean:
	 rm -f $(OBJS) $(EXEC)
#pyclean:
#	rm -f ../make_maps_v3_master.pyc